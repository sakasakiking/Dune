<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="PropertyItemButton" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Margin" Value="0,4,0,0" />
        <Setter Property="Tag" Value="{DynamicResource ThemeDarkStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock FontSize="{TemplateBinding FontSize}"
                           Foreground="{TemplateBinding Foreground}"
                           Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}"
                           TextWrapping="Wrap"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TextBrushDark}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertyItemSmallButton" TargetType="Button">
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Foreground" Value="#99FFFFFF" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock FontSize="{TemplateBinding FontSize}"
                           Foreground="{TemplateBinding Foreground}" 
                           Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}"
                           TextWrapping="Wrap"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#99FFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertyItemOutlinedButton" TargetType="Button">
        <Setter Property="Foreground" Value="#99FFFFFF" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#29FFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Height="16">
                        <TextBlock FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Margin="4,-4,4,0"
                                Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}" TextWrapping="Wrap">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Typography.Capitals" Value="AllSmallCaps" />
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#99FFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertyItemLinkButton" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="Padding" Value="4,4,4,4" />
        <Setter Property="Tag" Value="{DynamicResource ThemeDarkStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Margin="0,0,8,8">
                        <Border x:Name="HoverBg" CornerRadius="{DynamicResource ControlCornerRadius}" BorderThickness="0" Background="{TemplateBinding Background}" Opacity="0" />
                        <StackPanel Orientation="Horizontal" Margin="8,4,8,4">
                            
                            <Viewbox x:Name="ViewBoxLink" Width="16" Height="16" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"
                                    Visibility="{PluginStatus Plugin=felixkmh_Extras_Plugin, Status=Installed}" RenderOptions.ClearTypeHint="Enabled"
                                    RenderOptions.BitmapScalingMode="Fant" Tag="{DynamicResource ShowIconTextOnLink}">
                                <ContentControl Content="{Binding Value, TargetNullValue={StaticResource LinksIcon}}"
                                        DataContext="{Binding Url, Converter={PluginConverter Plugin=ThemeExtras, Converter=UrlToAsyncIconConverter}}" />
                            </Viewbox>

                            <TextBlock Name="LinkName" FontSize="{TemplateBinding FontSize}" VerticalAlignment="Center"
                                    Margin="{TemplateBinding Padding}" Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}" TextWrapping="Wrap" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DarkControlBackgroundBrush}" TargetName="HoverBg" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" TargetName="HoverBg" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=ViewBoxLink, Path=Tag}" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="LinkName" />
                            <Setter Property="Margin" Value="0,0,8,0" TargetName="LinkName" />
                            <Setter Property="Opacity" Value="0" TargetName="HoverBg" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ElementName=ViewBoxLink, Path=Visibility}" Value="Visible" />
                                <Condition Binding="{Binding ElementName=ViewBoxLink, Path=Tag}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="LinkName" />
                            <Setter Property="Opacity" Value="0" TargetName="HoverBg" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBg" Storyboard.TargetProperty="Opacity" To="0.16" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBg" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TextBrushDark}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertyItemTagButton" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="4,2,4,2" />
        <Setter Property="Tag" Value="{DynamicResource ThemeDarkStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="HoverBg" CornerRadius="{StaticResource ControlCornerRadiusSmall}" Background="{TemplateBinding Background}" Opacity="0.04"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" />
                        <TextBlock FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}"
                                Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}" TextWrapping="Wrap" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource DarkControlBackgroundBrush}" TargetName="HoverBg" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" TargetName="HoverBg" />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.08" TargetName="HoverBg"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TextBrushDark}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>