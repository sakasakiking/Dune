<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="PropertyItemButton" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Margin" Value="0,4,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock FontSize="{TemplateBinding FontSize}"
                           Foreground="{TemplateBinding Foreground}"
                           Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}"
                           TextWrapping="Wrap"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource IdleBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertyItemSmallButton" TargetType="Button">
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Foreground" Value="#99FFFFFF" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}"/>
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock FontSize="{TemplateBinding FontSize}"
                           Foreground="{TemplateBinding Foreground}" 
                           Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}"
                           TextWrapping="Wrap"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#99FFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertyItemOutlinedButton" TargetType="Button">
        <Setter Property="Foreground" Value="#99FFFFFF" />
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#29FFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Height="16">
                        <TextBlock FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Margin="4,-4,4,0"
                                Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}" TextWrapping="Wrap">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Typography.Capitals" Value="AllSmallCaps" />
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#99FFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertyItemLinkButton" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Margin" Value="0,4,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource HoverBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{DynamicResource ControlCornerRadius}" Background="{TemplateBinding Background}" Margin="5,0,5,8">
                        <DockPanel HorizontalAlignment="Center">
                            <Viewbox DockPanel.Dock="Left" Width="20" Height="20" x:Name="ViewBoxLink"
                                 VerticalAlignment="Center" Margin="8,8,8,8"
                                 Visibility="{PluginStatus Plugin=felixkmh_Extras_Plugin, Status=Installed}"
                                 RenderOptions.ClearTypeHint="Enabled" RenderOptions.BitmapScalingMode="Fant">
                                <ContentControl Content="{Binding Value, TargetNullValue={StaticResource LinksIcon}}"
                                                DataContext="{Binding Url, Converter={PluginConverter Plugin=ThemeExtras, Converter=UrlToAsyncIconConverter}}"/>
                            </Viewbox>

                            <TextBlock FontSize="{TemplateBinding FontSize}" Name="LinkName" Margin="8,8,8,8"
                                       Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center"
                                       Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}"
                                       TextWrapping="Wrap"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ElementName=ViewBoxLink, Path=Visibility}" Value="Visible">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="LinkName"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource HoverBrush}" />
                <Setter Property="Background" Value="{DynamicResource ControlIdleBackgroundBrush}"/>
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource HoverBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PropertyItemTagButton" TargetType="Button">
        <Setter Property="FontSize" Value="{DynamicResource FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#0A000000" />
        <Setter Property="Padding" Value="4,2,4,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="{StaticResource ControlCornerRadiusSmall}"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <TextBlock FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}"
                                   Text="{TemplateBinding Content, Converter={StaticResource ObjectToStringConverter}}" TextWrapping="Wrap"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
                <Setter Property="Background" Value="#14000000" />
                <Setter Property="BorderBrush" Value="#66000000" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>