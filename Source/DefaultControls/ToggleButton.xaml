<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="d">

    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="12,8,12,8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="HoverBg" Style="{DynamicResource HoverBg}" Opacity="0"/>
                        <Border x:Name="SelectedBg" Style="{DynamicResource SelectedBg}" Opacity="0" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource DarkControlBorderBrush}" TargetName="SelectedBg" />
                            <Setter Property="Background" Value="{DynamicResource DarkControlBackgroundBrush}" TargetName="HoverBg" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Tag, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}" TargetName="SelectedBg" />
                            <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" TargetName="HoverBg" />
                        </DataTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" Value="0.16" TargetName="HoverBg"/>
                            <Setter Property="Opacity" Value="0.16" TargetName="SelectedBg"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FavoriteRoundedToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource SecondaryButtonIdleBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource SecondaryButtonBrush}" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeLarge}"/>
        <!--<Setter Property="FontWeight" Value="Bold"/>-->
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="12"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryButtonBorderBrush}"/>
        <Setter Property="IsChecked" Value="False" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="HoverBg" Background="{TemplateBinding Background}" 
                            Height="{TemplateBinding Height}" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource ControlCornerRadius}">
                        <StackPanel Orientation="Horizontal" Margin="{TemplateBinding Padding}" HorizontalAlignment="Center">
                            <TextBlock x:Name="FavoriteIcon" Text="&#xe1ce;" Margin="0,0,8,0" VerticalAlignment="Center"
                                       FontSize="{DynamicResource FontSize}" Style="{DynamicResource IconFontStyle}"
                                       Foreground="{TemplateBinding Foreground}"/>
                            <TextBlock Text="{DynamicResource LOCFavoriteGame}" FontSize="{TemplateBinding FontSize}" 
                                       Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center"/>
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="TextBlock.Text" Value="&#xe00a;" TargetName="FavoriteIcon" />
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource SecondaryButtonBrush}"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="HoverBg"
                                                         Storyboard.TargetProperty="Background.Color" 
                                                         To="#CCCCCC" Duration="0:0:0.4">
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="HoverBg"
                                                         Storyboard.TargetProperty="Background.Color" 
                                                         To="#DBDBDB" Duration="0:0:0.4">
                                        </ColorAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlHoverBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavoriteTubeToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource ControlHoverBackgroundBrush}" />
        <Setter Property="Foreground" Value="Yellow" />
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeLarge}"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsChecked" Value="True" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="24"
                                Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                            <TextBlock x:Name="FavoriteAction" Text="{DynamicResource LOCRemoveFavoriteGame}"
                                       FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Style="{StaticResource BaseTextBlockStyle}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter Property="TextBlock.Text" Value="{DynamicResource LOCFavoriteGame}" TargetName="FavoriteAction" />
                            <Setter Property="TextBlock.Foreground" Value="{DynamicResource IdleBrush}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlSelectedBackgroundBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource HoverBrush}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{DynamicResource ControlSelectedBackgroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IconRoundedToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="Background" Value="#33000000" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#33FFFFFF"
                            Background="{TemplateBinding Background}" Width="36" Height="36" CornerRadius="18">
                        <Viewbox Margin="{TemplateBinding Padding}">
                            <TextBlock Text="{TemplateBinding Tag}" Foreground="{TemplateBinding Foreground}" Style="{StaticResource IconFontStyle}" />
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="Background" Value="#33000000" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Background" Value="#66000000" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataPickerToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="FontFamily" Value="Segoe Fluent Icons, Segoe MDL2 Assets" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>